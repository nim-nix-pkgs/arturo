name: "array"
type: :function
module: "Converters"
source: "https://github.com/arturo-lang/arturo/blob/master/src/library/Converters.nim#L418"
description: "create array from given block, by reducing/calculating all internal values"
returns: [
        :block
    ]
alias: "@"
infix?: false
examples: [
        {
            none: @[]               ; none: []
            a: @[1 2 3]             ; a: [1 2 3]
            
            b: 5
            c: @[b b+1 b+2]         ; c: [5 6 7]
            
            d: @[
                3+1
                print "we are in the block"
                123
                print "yep"
            ]
            ; we are in the block
            ; yep
            ; => [4 123]
        }
         {
            ; initializing empty array with initial value
            x: array.of: 2 "done"
            inspect.muted x
            ; [ :block
            ;     done :string
            ;     done :string
            ; ]
        }
         {
            ; initializing empty n-dimensional array with initial value
            x: array.of: [3 4] 0          ; initialize a 3x4 2D array
                                            ; with zeros
            ; => [[0 0 0 0] [0 0 0 0] [0 0 0 0]]
        }
    ]
attributes: #[
    of: #[
        types: [
                :integer
                 :block
            ]
        description: "initialize an empty n-dimensional array with given dimensions"
        ]
    ]
arguments: #[
    source: [
            :any
        ]
    ]
related: [
        "Converters/dictionary"
         "Converters/from"
         "Converters/as"
         "Converters/function"
    ]