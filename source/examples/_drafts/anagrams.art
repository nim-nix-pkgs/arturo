anagrams: #[]
words: select map read.lines "http://wiki.puzzlers.org/pub/wordlists/unixdict.txt" => strip => [not? empty?]
total: size words
loop.with:'i words 'word [
    if 0 = i%100 ->
        print [i "out of" total]

    k: join sort split word
    if not? key? anagrams k ->
        set anagrams k []

    set anagrams k (get anagrams k) ++ word
]

count: max map values anagrams => size

print ["count:" count]

loop anagrams [k,anagram][
    print ["processing:" k]
    if size anagram >= count ->
        print anagram
]

; require 'open-uri'
 
; anagram = Hash.new {|hash, key| hash[key] = []} # map sorted chars to anagrams
 
; URI.open('http://wiki.puzzlers.org/pub/wordlists/unixdict.txt') do |f|
;   words = f.read.split
;   for word in words
;     anagram[word.split('').sort] << word
;   end
; end
 
; count = anagram.values.map {|ana| ana.length}.max
; anagram.each_value do |ana|
;   if ana.length >= count
;     p ana
;   end
; end