define :color [name][
    init: ->
        this\value: 0

    print: ->
        this\name

    compare: [
        if this\value > that\value -> return 1
        if this\value = that\value -> return 0
        return neg 1
    ]
]

lst: map ["violet" "red" "green" "indigo" "blue" "yellow" "orange"] 'c ->
    to :color @[c]

loop lst 'a [
    loop lst 'b [
        print [a b]
        if a\name <> b\name [
            answer: input ~"Is |a| less than |b|? [y/n] "
            if? answer="y" [
                b\value: a\value + 1
            ]
        ]
    ]
]

inspect lst

; ; import algorithm, strformat, strutils
 
; ; let list = ["violet", "red", "green", "indigo", "blue", "yellow", "orange"]
 
; ; var count = 0
 
; ; proc comp(x, y: string): int =
; ;   if x == y: return 0
; ;   inc count
; ;   while true:
; ;     stdout.write &"{count:>2}) Is {x} less than {y} (y/n)? "
; ;     let answer = stdin.readLine()[0]
; ;     case answer
; ;     of 'y': return -1
; ;     of 'n': return 1
; ;     else: echo "Incorrect answer."
 
; ; var sortedList: seq[string]
 
; ; for elem in list:
; ;   sortedList.insert(elem, sortedList.upperBound(elem, comp))
 
; ; echo "Sorted list: ", sortedList.join(", ")